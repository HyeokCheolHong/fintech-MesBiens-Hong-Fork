plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'mesbiens'
version = '0.0.1-SNAPSHOT'

java {
     sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
	implementation 'io.jsonwebtoken:jjwt-api:1.0.0' 
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	/*providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'*/
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	// oracle cloud db
	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
	
	
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	//implementation 'com.oracle.database.security:osdt_cert'
	implementation 'com.oracle.database.security:oraclepki'
	implementation 'com.oracle.database.security:osdt_core'
	implementation 'javax.servlet:javax.servlet-api:4.0.1' 
}

tasks.named('test') {
	useJUnitPlatform()
}
//tasks.withType(JavaCompile) {
//    options.compilerArgs << "-parameters" //메서드 파라미터 이름을 클래스 파일에 저장하도록 지정하는 옵션
//}
tasks.withType(JavaCompile) {
    options.compilerArgs += ['-parameters']
}
